Given the following query and available data items, break down the query into sub-queries.

Query: What are the components of Etanercept and how is it produced?

Available Data Items:
Item 1: A table with columns: brand, company, drugbank-id
Item 2: A table with columns: brand, company, drugbank-id
Item 3: A table with columns: brand, company, drugbank-id
Item 4: text content: Epirubicin is one of the most active agents for breast cancer. The formation of epirubicin glucuroni...

For each sub-query, you MUST specify which item from the available items should be used to answer it (using the item number).
If you can't determine which item to use for a sub-query, use item 1 as default.

Return a JSON object with the following structure:
{
    "requires_decomposition": boolean,  // Whether the query needs to be decomposed
    "reasoning": string,  // Explanation of why/how the query is decomposed
    "sub_queries": [  // List of sub-queries, empty if requires_decomposition is false
        {
            "sub_query": string,  // The sub-query text
            "target_item_index": number,  // Index of the relevant item (1-based). REQUIRED. Default to 1 if unsure.
            "expected_answer_type": string  // Type of answer expected (text, number, date, etc.)
        }
    ],
    "aggregation_strategy": string  // How to combine sub-query results, null if no aggregation needed
}

IMPORTANT: Each sub-query MUST have a target_item_index specified. If you're unsure which item to use, default to 1.